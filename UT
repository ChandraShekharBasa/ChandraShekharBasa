 
public PartySearchResponse getCostCenter(String ecid) {

        String costCenterUrl = commCardBaseUrl + "/api/client/getCostCenter?ecid=" + ecid;
        try {
            HttpHeaders headers = getOAuthTokenForCommCardService();
            HttpEntity httpEntity = new HttpEntity<>(headers);
            RestTemplate restTemplate = new RestTemplate();

            appLogger.info("calling commercial card service for cost center -  endpoint URL: {} and ecid: {}",
                    costCenterUrl, ecid);
            ResponseEntity<PartySearchResponse> response = restTemplate.exchange(costCenterUrl, HttpMethod.GET,
                    httpEntity, PartySearchResponse.class);
            PartySearchResponse responseObject = response.getBody();

            Gson gson = new Gson();
            appLogger.info("commercial card service cost center response for ecid: {} Response  body: {}", ecid,
                    gson.toJson(responseObject));
            return responseObject;
        } catch (Exception exp) {
            MDC.put(CommonConstants.ERROR_CODE, LoggingErrorCodes.TNO_ERROR);
            appLogger.error("Received an unexpected error from TNO service: ", exp);
            throw new DownstreamServicesException(UIErrorCode.UNEXPECTED_ERROR,
                    "Received an unexpected error from TNO service",
                    MDC.get(CommonConstants.TRACEID), exp);
        }
    }
