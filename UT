 
kycDetails.setBusinessOperations(BusinessOperationsMapper.toBusinessOperationsDTO(informationEntity.getBusinessOperationsEntity()));
            kycDetails.setDocumentMetaData(DocMetadataInfoMapper.toDocMetadataDTO(informationEntity.getDocumentMetaDataEntities()));
            BusinessOperationsDTO busOps = kycDetails.getBusinessOperations();
            if (busOps != null && busOps.getTotalAnnualRevenueAmount() != null) busOps.setTotalAnnualRevenueAmountString(String.valueOf(Math.round(busOps.getTotalAnnualRevenueAmount())));

            KYCExpenseReportToolEntity kYCExpenseReportToolEntity = kYCExpenseReportingToolRepository.findByKycId(kycId);
            if (Objects.nonNull(kYCExpenseReportToolEntity)) {
                CmlCardThirdPartyExpenseDTO cmlCardThirdPartyExpenseDTO = CmlCardExpenseToolEntityToDTOMapper.mapKYCExpenseReportToolEntityToCmlCardThirdPartyExpenseDTO(
                        kYCExpenseReportToolEntity);
                kycDetails.getBusinessOperations().setExpsToolName(cmlCardThirdPartyExpenseDTO.getExpsToolName());
                kycDetails.getBusinessOperations().setExpsToolRefNo(cmlCardThirdPartyExpenseDTO.getExpsToolRefNo());
                kycDetails.getBusinessOperations().setExpsToolVendorEmail(cmlCardThirdPartyExpenseDTO.getExpsToolVendorEmail());
                kycDetails.getBusinessOperations().setIsThirdPartyExpTool(cmlCardThirdPartyExpenseDTO.getIsThirdPartyExpTool());
                kycDetails.getBusinessOperations().setVendorSecondEmail(cmlCardThirdPartyExpenseDTO.getVendorSecondEmail());
                kycDetails.getBusinessOperations().setVendorPhone(cmlCardThirdPartyExpenseDTO.getVendorPhone());
            }

static BusinessOperationsDTO toBusinessOperationsDTO(BusinessOperationsEntity businessOperationsEntity){
        BusinessOperationsDTO businessOperationsDTO = null;
        if(businessOperationsEntity != null){
            businessOperationsDTO = new BusinessOperationsDTO();
            BeanUtils.copyProperties(businessOperationsEntity, businessOperationsDTO);
            businessOperationsDTO.setMajorVendorsTenantsCountries(UOCommonUtils.stringToList(businessOperationsEntity.getMajorVendorsTenantsCountriesList()));
            businessOperationsDTO.setPurposeOfAccount(UOCommonUtils.stringToList(businessOperationsEntity.getPurposeOfAccount()));
            businessOperationsDTO.setSupplierCountriesOfOperations(UOCommonUtils.stringToList(businessOperationsEntity.getSupplierCountriesOfOperationsList()));
            businessOperationsDTO.setCustomerCountriesOfOperations(UOCommonUtils.stringToList(businessOperationsEntity.getCustomerCountriesOfOperationsList()));
            businessOperationsDTO.setOperationsConcentrationCountries(UOCommonUtils.stringToList(businessOperationsEntity.getOperationsConcentrationCountriesList()));
            businessOperationsDTO.setInitialFundsCountries(UOCommonUtils.stringToList(businessOperationsEntity.getInitialFundsCountriesList()));
            businessOperationsDTO.setOngoingFundsCountries(UOCommonUtils.stringToList(businessOperationsEntity.getOngoingFundsCountriesList()));
            businessOperationsDTO.setEntityActivity(UOCommonUtils.stringToListForEntity(businessOperationsEntity.getEntityActivity()));
        }
        return businessOperationsDTO;
    }
